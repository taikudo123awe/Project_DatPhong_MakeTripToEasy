<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8">
  <title>Báo cáo thống kê</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.1/dist/chart.umd.min.js"></script>
  <style>
    body {
      background: #f8fafc;
      font-family: "Segoe UI", sans-serif;
    }
    h2 {
      font-weight: 700;
    }
    .summary-box {
      border: 1px solid #ddd;
      border-radius: 10px;
      background: white;
      padding: 15px 25px;
      font-size: 18px;
    }
    .summary-box h3 {
      font-weight: 700;
      font-size: 26px;
      margin-bottom: 10px;
    }
    .summary-box p {
      margin: 2px 0;
    }
    .nav-tabs button {
      font-weight: 500;
    }
    canvas {
      background: #fff;
      border-radius: 10px;
      padding: 10px;
      box-shadow: 0 0 8px rgba(0,0,0,0.05);
    }
  </style>
</head>
<body class="container py-4">

  <h2 class="mb-4">Báo cáo thống kê</h2>

  <!-- Tổng quan hôm nay -->
  <div class="summary-box mb-4">
    <h3>Hôm nay</h3>
    <p><b>Phòng đặt:</b> <span id="bookedRooms">-</span></p>
    <p><b>Phòng trống:</b> <span id="availableRooms">-</span></p>
    <p><b>Doanh thu:</b> <span id="todayRevenue">-</span> ₫</p>
  </div>

  <!-- Tabs thời gian -->
  <ul class="nav nav-tabs mb-3" id="rangeTabs">
    <li class="nav-item"><button class="nav-link active" data-range="week">Tuần</button></li>
    <li class="nav-item"><button class="nav-link" data-range="month">Tháng</button></li>
    <li class="nav-item"><button class="nav-link" data-range="year">Năm</button></li>
  </ul>

  <!-- Biểu đồ doanh thu -->
  <div class="mb-5">
    <h5 class="fw-bold mb-3">Doanh thu</h5>
    <canvas id="revenueChart" height="300"></canvas>
  </div>

  <!-- Biểu đồ tình trạng phòng -->
  <div>
    <h5 class="fw-bold mb-3">Tình trạng phòng</h5>
    <canvas id="roomChart" height="400"></canvas>
  </div>

  <script>
    const fmt = n => Number(n || 0).toLocaleString('vi-VN');

    async function loadToday() {
      const res = await fetch('/provider/report/today');
      const data = await res.json();
      document.getElementById('bookedRooms').textContent = fmt(data.bookedRooms);
      document.getElementById('availableRooms').textContent = fmt(data.availableRooms);
      document.getElementById('todayRevenue').textContent = fmt(data.todayRevenue);
    }

    let revenueChart, roomChart;

    async function loadRevenue(range='week') {
      const res = await fetch(`/provider/report/revenue?range=${range}`);
      const data = await res.json();
      const labels = data.points.map(p => p.label);
      const values = data.points.map(p => p.revenue);

      if (revenueChart) revenueChart.destroy();
      revenueChart = new Chart(document.getElementById('revenueChart'), {
        type: 'bar',
        data: {
          labels,
          datasets: [{
            label: 'Doanh thu (₫)',
            data: values,
            backgroundColor: ['#0d6efd80', '#0d6efd90', '#0d6efd']
          }]
        },
        options: {
          responsive: true,
          plugins: { legend: { display: false } },
          scales: {
            y: { beginAtZero: true, title: { display: true, text: '₫' } }
          }
        }
      });
    }

    async function loadRoomStatus(range='week') {
      const res = await fetch(`/provider/report/room-status?range=${range}`);
      const data = await res.json();

      const labels = data.rooms.map(r => r.roomName);
      const booked = data.rooms.map(r => r.booked);
      const available = data.rooms.map(r => r.available);

      if (roomChart) roomChart.destroy();
      roomChart = new Chart(document.getElementById('roomChart'), {
        type: 'bar',
        data: {
          labels,
          datasets: [
            {
              label: 'Phòng được đặt',
              data: booked,
              backgroundColor: '#36a2eb',
              stack: 'stack1'
            },
            {
              label: 'Phòng trống',
              data: available,
              backgroundColor: '#9bd0f5',
              stack: 'stack1'
            }
          ]
        },
        options: {
          indexAxis: 'y',
          responsive: true,
          plugins: {
            legend: { position: 'top' },
          },
          scales: {
            x: { stacked: true, title: { display: true, text: 'Số phòng' } },
            y: { stacked: true }
          }
        }
      });
    }

    document.querySelectorAll('#rangeTabs .nav-link').forEach(btn => {
      btn.addEventListener('click', e => {
        document.querySelectorAll('#rangeTabs .nav-link').forEach(b => b.classList.remove('active'));
        btn.classList.add('active');
        const range = btn.dataset.range;
        loadRevenue(range);
        loadRoomStatus(range);
      });
    });

    (async function init() {
      await loadToday();
      await loadRevenue('week');
      await loadRoomStatus('week');
    })();
  </script>
</body>
</html>
